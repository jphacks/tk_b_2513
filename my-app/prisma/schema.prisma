generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/**
 * users テーブル
 */
model User {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username     String   @unique
  email        String   @unique
  passwordHash String   @map("password_hash")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  images       Image[]

  @@map("users")
}

/**
 * images テーブル
 * embedding_vector は pgvector 型なので Prisma では Unsupported として扱う
 * 実際の読み書き・検索は $executeRaw / $queryRaw を使う
 */
model Image {
  id        String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String?                @map("user_id") @db.Uuid
  prompt    String
  imageUrl  String                 @map("image_url")
  embedding Unsupported("vector")? @map("embedding_vector")
  createdAt DateTime               @default(now()) @map("created_at") @db.Timestamptz(6)
  user      User?                  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([embedding], map: "idx_images_embedding")
  @@map("images")
}
